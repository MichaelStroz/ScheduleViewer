swagger: "2.0"
info:
  description: "The Schedule Viewer Server manages a radiology schedule. It receives requests for the schdule as well as updates. It manages requests for meta information and administrative access. Api key `special-key` to test the authorization filters."
  version: "1.0.0"
  title: "Schedule Viewer Server"
host: "petstore.swagger.io"
basePath: "/v1"
tags:
- name: "active"
  description: "Everything concerning the currently active schedule"
schemes:
- "https"
- "http"
paths:
  /schedules/active/today:
    get:
      tags:
      - "active"
      summary: "Get today's rotation assignments from the active schedule"
      description: "Returns today's schedule as a json array containing a mapping of radiologists to rotations. Today is determined by the server's local time."
      operationId: "getTodaysSchedule"
      produces:
      - "application/json"
      parameters:
      - name: "location"
        in: "query"
        description: "Optional location filter to limit the result set to a set of hospitals or clinics."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pet"
        400:
          description: "Invalid status value"
      security:
      - petstore_auth:gf
        - "write:pets"
        - "read:pets"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Schedule:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      active:
        type: "boolean"
      days:
        type: "array"
        items:
          $ref: "#/definitions/ScheduleEntry"
  ScheduleEntry:
    type: "object"
    properties:
      date:
        type: "string"
      rotationAssignments:
        type: "array"
        items:
          $ref: "#/definitions/RotationAssignment"
  RotationAssignment:
    type: "object"
    properties:
      rotation:
        type: "string"
      radiologist:
        type: "string"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"